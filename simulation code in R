# 加载rstan库
library(rstan)

# 循环500次，即蒙特卡洛模拟
for (i in 1:1:500){
  # 设置t值的序列
  t <- seq(from=0.01, by=0.01, length=1)
  
  # 创建一个100行50列的矩阵X
  X <- matrix(nrow=100, ncol=50)
  
  # 将b的值设为3，非线性参数
  b <- 3
  
  # 循环50次，样本数量为50
  for (k in 1:1:50){
    # 生成lam和v的伽玛分布随机变量
    lam <- rgamma(1, 5, 1/2)
    v <- rgamma(1, 1, 1/0.2)
    
    # 计算Mu为t的b次方的差
    Mu <- diff(t^b, lag=1)
    
    # 循环100次，即时间长度
    for(m in 1:1:100){
      # 根据前一个X的值、lam、Mu和v生成X的随机值
      if (m==1)
        X[m,k] <- rnorm(n=1, mean=lam[1]*(t[1]^b[1]), sd=v[1]*sqrt(t[1]))
      else
        X[m,k] <- rnorm(n=1, mean=X[m-1,k]+lam[1]*Mu[m-1], sd=v[1]*sqrt(t[1]))
    }
  }
  
  # 创建包含N、T、X和t的列表M0
  M0 <- list(N=50, T=100, X=X, t=t)
  
  # 使用stan函数拟合模型并将结果保存到csv文件中
  fit <- stan(file = 'test.stan', data = M0, iter=10000, chain=1)
  write.csv(fit@sim[["samples"]][[1]], paste(i, ".csv"))

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

# test.stan代码
 # 数据块，定义输入数据结构
data {
  // N表示观测值的数量
  int<lower=0> N;
  // T表示时间点的数量
  int<lower=0> T;
  // t表示时间点的数组
  real t[T];
  // X表示观测值的矩阵
  real X[T,N];
}

# 参数块，定义模型参数
parameters {
  // lam表示每个观测值的lambda参数
  real<lower=0> lam[N];
  // eta表示每个观测值的eta参数
  real<lower=0> eta[N];
  // seta表示时间的影响
  real<lower=0> seta;
  // a1、b1、a2、b2是gamma分布的形状和比例参数
  real<lower=0> a1;
  real<lower=0> b1;
  real<lower=0> a2;
  real<lower=0> b2;
}

# 模型块，定义模型
model {
  // a1、b1、a2、b2的先验分布为Cauchy分布
  a1 ~ cauchy(0, 30);
  b1 ~ cauchy(0, 30);
  a2 ~ cauchy(0, 30);
  b2 ~ cauchy(0, 30);
  
  // lam和eta的先验分布为gamma分布
  for (i in 1:N) {
    lam[i] ~ gamma(a1, b1);
    eta[i] ~ gamma(a2, b2);
  }
  
  // seta的先验分布为标准正态分布
  seta ~ normal(0, 1);
  
  // 循环计算每个观测值的概率分布
  for (j in 1:T) {
    for (i in 1:N) {
      if (j == 1) {
        // 第一个时间点的观测值的概率分布
        X[j, i] ~ normal(lam[i]*(t[j]^seta), eta[i]*sqrt(t[j]));
      } else {
        // 非第一个时间点的观测值的概率分布
        X[j, i] ~ normal(X[j-1, i]+lam[i]*(t[j]^seta)-lam[i]*(t[j-1]^seta), eta[i]*sqrt((t[j]-t[j-1])));
      }
    }
  }
}
